#!/bin/bash

set -x
SCRIPTPATH="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"

echo '###########################################################################'
echo '# Install packages (apt)...'
sudo apt -y install \
  apt-transport-https \
  awscli \
  ca-certificates \
  curl \
  git-all \
  gnupg \
  htop \
  jq \
  mysql-client \
  lsb-release \
  ncdu \
  network-manager-openvpn \
  network-manager-openvpn-gnome \
  npm \
  python3 \
  python3-pip \
  python3-venv \
  qbittorrent \
  terminator \
  vim

echo '###########################################################################'
echo '# Remove packages (apt)...'
sudo apt -y remove ibus

echo '###########################################################################'
echo '# Install packages (snap)...'
sudo snap install slack --classic

echo '###########################################################################'
echo '# Install nvm/node...'
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
source ~/.bashrc
nvm install lts/*

echo '###########################################################################'
echo '# Install packages (npm)...'
npm install --global gsts
npm install --global yarn

echo '###########################################################################'
echo '# Install albert...'
# @doc https://software.opensuse.org/download.html?project=home:manuelschneid3r&package=albert
echo 'deb http://download.opensuse.org/repositories/home:/manuelschneid3r/xUbuntu_22.04/ /' | sudo tee /etc/apt/sources.list.d/home:manuelschneid3r.list
curl -fsSL https://download.opensuse.org/repositories/home:manuelschneid3r/xUbuntu_22.04/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/home_manuelschneid3r.gpg > /dev/null
sudo apt update
sudo apt install albert

echo '###########################################################################'
echo '# Install PIPX (https://pypa.github.io/pipx/)...'
python3 -m pip install --user --upgrade pipx
python3 -m pipx ensurepath

echo '###########################################################################'
echo '# Install Docker...'
sudo apt -y remove docker docker-engine docker.io containerd runc
sudo apt -y update

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt update

sudo apt install docker-ce
sudo groupadd docker
sudo usermod -aG docker $USER

echo '###########################################################################'
echo '# Install Docker Compose...'
mkdir -p ~/.docker/cli-plugins/
curl -SL https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
chmod +x ~/.docker/cli-plugins/docker-compose

echo '###########################################################################'
echo '# Install Mysql-Workbench...'
workbench="mysql-apt-config_0.8.19-1_all.deb"
sudo wget https://dev.mysql.com/get/$workbench
sudo apt -y install ./$workbench
rm -rf ./$workbench
sudo apt -y update
sudo apt -y install mysql-workbench-community

echo '###########################################################################'
echo '# Install XSV...'
sudo curl -L "https://github.com/BurntSushi/xsv/releases/download/0.13.0/xsv-0.13.0-x86_64-unknown-linux-musl.tar.gz" | sudo tar xvz -C /usr/local/bin
sudo chmod +x /usr/local/bin/xsv

echo '###########################################################################'
echo '# Install DUST...'
dust="dust-v0.7.5-x86_64-unknown-linux-musl"
sudo curl -L "https://github.com/bootandy/dust/releases/download/v0.7.5/${dust}.tar.gz" | sudo tar xvz -C /usr/local/bin
sudo cp "/usr/local/bin/${dust}/dust" "/usr/local/bin/dust"
sudo rm -rf "/usr/local/bin/${dust}"
sudo chmod +x /usr/local/bin/dust

echo '###########################################################################'
echo '# Install PINTA...'
sudo add-apt-repository -y ppa:pinta-maintainers/pinta-stable
sudo apt -y update
sudo apt -y install pinta

echo '###########################################################################'
echo '# Install VLC...'
sudo apt -y install vlc

echo '###########################################################################'
echo '# Install chrome...'
sudo sh -c 'echo "deb [arch=amd64] https://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list'
wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
sudo apt -y update
sudo apt -y install google-chrome-stable

echo '###########################################################################'
echo '# Install jetbrains toolbox...'
curl -fsSL https://raw.githubusercontent.com/nagygergo/jetbrains-toolbox-install/master/jetbrains-toolbox.sh | bash

echo '###########################################################################'
echo '# Install VeraCrypt...'
veracrypt="veracrypt-1.24-Update7-Ubuntu-21.04-amd64.deb"
sudo wget https://launchpad.net/veracrypt/trunk/1.24-update7/+download/$veracrypt
sudo apt -y install ./$veracrypt
rm -rf ./veracrypt*

echo '###########################################################################'
echo '# Install Terraform...'
curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
sudo apt-add-repository -y "deb [arch=$(dpkg --print-architecture)] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
sudo apt -y update
sudo apt -y install terraform
terraform -install-autocomplete

echo '###########################################################################'
echo '# Install Kubernetes...'
kubLastVersion=$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)
curl -LO https://storage.googleapis.com/kubernetes-release/release/$kubLastVersion/bin/linux/amd64/kubectl
chmod +x ./kubectl
sudo mv ./kubectl /usr/local/bin/kubectl

echo '###########################################################################'
echo '# Install Helm...'
curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

echo '###########################################################################'
echo '# Setup git...'
git config --global user.name vdauchy
git config --global push.default current
git config --global core.editor vim

echo '###########################################################################'
echo '# Setup bashrc...'
grep -qxF '. ~/.bash_customs' ~/.bashrc || echo '. ~/.bash_customs' >> ~/.bashrc

echo '###########################################################################'
echo '# Extends bashrc...'
cp -f $SCRIPTPATH/shell/.bash_customs ~/.bash_customs
cp -f $SCRIPTPATH/shell/.bash_aliases ~/.bash_aliases
cp -n $SCRIPTPATH/shell/.github ~/.github
cp -n $SCRIPTPATH/shell/.blackfire ~/.blackfire

echo '###########################################################################'
echo '# Setups Configs...'

mkdir -p ~/.config/terminator
cp -f $SCRIPTPATH/profile/.config/terminator/config ~/.config/terminator/config

mkdir -p ~/.config/vlc
cp -f $SCRIPTPATH/profile/.config/vlc/vlcrc ~/.config/vlc/vlcrc

echo '###########################################################################'
echo '# Upgrade...'
sudo apt -y upgrade

echo '###########################################################################'
echo '# Cleanup...'
sudo apt -y autoremove